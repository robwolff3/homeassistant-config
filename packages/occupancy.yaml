
#################################################################
## Sensors
binary_sensor:

  - platform: template
    sensors:

      user1_occupancy:
        device_class: presence
        value_template: >-
          {{ is_state('device_tracker.user1', 'home') }}

      user2_occupancy:
        device_class: presence
        value_template: >-
          {{ is_state('device_tracker.user2', 'home') }}

      user3_occupancy:
        device_class: presence
        value_template: >-
          {{ is_state('device_tracker.user3', 'home') }}

      user4_occupancy:
        device_class: presence
        value_template: >-
          {{ is_state('device_tracker.user4', 'home') }}


sensor:

  ## User1 Occupancy Detection ##
  - platform: mqtt
    state_topic: !secret topic_office_user1
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User1 Office'

  - platform: mqtt
    state_topic: !secret topic_bedroom_user1
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User1 Bedroom'

  - platform: mqtt
    state_topic: !secret topic_upstairs_user1
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User1 Upstairs'

  ## User2 Occupancy Detection ##
  - platform: mqtt
    state_topic: !secret topic_office_user2
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User2 Office'

  - platform: mqtt
    state_topic: !secret topic_bedroom_user2
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User2 Bedroom'

  - platform: mqtt
    state_topic: !secret topic_upstairs_user2
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User2 Upstairs'

  ## User3 Occupancy Detection ##
  - platform: mqtt
    state_topic: !secret topic_office_user3
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User3 Office'

  - platform: mqtt
    state_topic: !secret topic_bedroom_user3
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User3 Bedroom'

  - platform: mqtt
    state_topic: !secret topic_upstairs_user3
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User3 Upstairs'

  ## User4 Occupancy Detection ##
  - platform: mqtt
    state_topic: !secret topic_office_user4
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User4 Office'

  - platform: mqtt
    state_topic: !secret topic_bedroom_user4
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User4 Bedroom'

  - platform: mqtt
    state_topic: !secret topic_upstairs_user4
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'User4 Upstairs'


#################################################################
## Automations
automation:

## Publish Message - Arrival Scan
  - alias: Publish Message - Arrival Scan
    initial_state: True

    trigger:
      - platform: state
        entity_id: binary_sensor.frontdoor_contact, binary_sensor.sidedoor_contact, binary_sensor.backdoor_contact
        from: 'off'
        to: 'on'

    condition:
      - condition: state
        entity_id: binary_sensor.user1_occupancy
        state: 'off'
      - condition: state
        entity_id: binary_sensor.user2_occupancy
        state: 'off'
      - condition: state
        entity_id: binary_sensor.user3_occupancy
        state: 'off'
      - condition: state
        entity_id: binary_sensor.user4_occupancy
        state: 'off'

    action:
      - service: mqtt.publish
        data_template:
          topic: "home/scan/ARRIVE"
          payload: 'null'

## Publish Message - Departure Scan
  - alias: Publish Message - Departure Scan
    initial_state: True

    trigger:
      - platform: state
        entity_id: binary_sensor.frontdoor_contact, binary_sensor.sidedoor_contact, binary_sensor.backdoor_contact
        from: 'on'
        to: 'off'

    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.user1_occupancy
          state: 'on'
        - condition: state
          entity_id: binary_sensor.user2_occupancy
          state: 'on'
        - condition: state
          entity_id: binary_sensor.user3_occupancy
          state: 'on'
        - condition: state
          entity_id: binary_sensor.user4_occupancy
          state: 'on'

    action:
      - delay: '00:00:15'
      - service: mqtt.publish
        data_template:
          topic: "home/scan/DEPART"
          payload: 'null'
      - delay: '00:01:00'
      - service: mqtt.publish
        data_template:
          topic: "home/scan/DEPART"
          payload: 'null'

## Publish Message - Update MQTT sensors on startup
  - alias: Publish Message - Update MQTT sensors on startup
    initial_state: True

    trigger:
      - platform: homeassistant
        event: start

    action:
      - service: mqtt.publish
        data:
          topic: "home/scan/restart"
          payload: 'null'
