
#################################################################
## Scripts
script:

  roomba_on:
    sequence:
      - service: homeassistant.turn_on
        entity_id: vacuum.roomba


#################################################################
## Sensors
sensor:

  - platform: template
    sensors:
      dishwasher_status:
        value_template: '{{ states.input_select.dishwasher_status.state}}'
        friendly_name: 'Dishwasher Status'

  - platform: template
    sensors:
      roomba_status:
        value_template: '{{ states.vacuum.roomba.attributes.status}}'
        friendly_name: 'Roomba Status'


##################################################
## Inputs
input_select:

  dishwasher_status:
    initial: 'Off'
    options:
      - Running
      - Drying
      - 'Off'

input_boolean:

  disable_roomba_schedule:
  disable_bathroom_heater:
  disable_bathroom_heater_schedule:
  disable_nest:

#################################################################
## Automations
automation:

#Roomba logic
  # Sceduled Roobma!!
  - alias: Roomba On Weekdays
    initial_state: True

    trigger:
      - platform: time
        at: '10:00:00'

    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
      - condition: template
        value_template: '{{states.vacuum.roomba.attributes.battery_level > 79}}'
      - condition: state
        entity_id: input_boolean.disable_roomba_schedule
        state: 'off'

    action:
      - service: homeassistant.turn_on
        entity_id: vacuum.roomba

  # Notify when Roomba is stuck or stopped
  - alias: Roomba notify stuck or stopped
    initial_state: True

    trigger:
      - platform: state
        entity_id: vacuum.roomba
        to: 'off'
        for:
          minutes: 1

    condition:
      condition: or
      conditions:
        - condition: template
          value_template: '{{states.vacuum.roomba.attributes.status == "Stuck"}}'
        - condition: template
          value_template: '{{states.vacuum.roomba.attributes.status == "Stopped"}}'

    action:
      - service: notify.html5
        data:
          title: 'Roomba Error - {{now().strftime("%l:%M %P")}}'
          message: 'Schmidt is stuck or something else stopped him.'
          data:
            requireInteraction: true
            renotify: true
            tag: 'roomba_notify'

  # Notify when Roomba battery very low
  - alias: Roomba notify battery very low
    initial_state: True

    trigger:
      - platform: template
        value_template: '{{states.vacuum.roomba.attributes.battery_level < 5}}'

    action:
      - service: notify.html5
        data:
          title: 'Roomba Error - {{now().strftime("%l:%M %P")}}'
          message: 'Schmidt battery is 5%.'
          data:
            requireInteraction: true
            renotify: true
            tag: 'roomba_notify'

#Dishwasher logic
  # Dishwasher set running
  - alias: Set dishwasher active when power detected
    initial_state: True

    trigger:
      - platform: numeric_state
        entity_id: sensor.meter_outlet_power
        above: 10

    condition:
      - condition: state
        entity_id: input_select.dishwasher_status
        state: 'Off'

    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.dishwasher_status
          option: Running

  # Dishwasher set drying
  - alias: Set dishwasher drying when power drops
    initial_state: True

    trigger:
      - platform: numeric_state
        entity_id: sensor.meter_outlet_power
        below: 600
        above: 380
        for:
          minutes: 2

    condition:
      - condition: state
        entity_id: input_select.dishwasher_status
        state: Running

    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.dishwasher_status
          option: Drying

  # Dishwasher set off
  - alias: Set dishwasher off
    initial_state: True

    trigger:
      - platform: numeric_state
        entity_id: sensor.meter_outlet_power
        below: 5
        for:
          minutes: 6

    condition:
      - condition: state
        entity_id: input_select.dishwasher_status
        state: Drying

    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.dishwasher_status
          option: 'Off'

  # Text and add to todo Dishwasher Alert when done
  - alias: Send text alert when dishwasher is done
    initial_state: True

    trigger:
      - platform: state
        entity_id: input_select.dishwasher_status
        to: 'Off'

    action:
      - service: notify.html5
        data:
          title: 'Dishwasher Finished - {{now().strftime("%m/%d - %l:%M%P")}}'
          message: 'The Dishwasher has finished and is ready to be emptied.'
          data:
            requireInteraction: true

  # Check for things left on
  - alias: Check for things left on
    initial_state: True

    trigger:
      - platform: state
        entity_id: binary_sensor.user1_occupancy, binary_sensor.user2_occupancy
        from: 'on'
        to: 'off'

    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.user1_occupancy
          state: 'off'
        - condition: state
          entity_id: binary_sensor.user2_occupancy
          state: 'off'
        - condition: or
          conditions:
            - condition: template
              value_template: '{{states.light.livingroom_light_level.attributes.brightness > 128}}'
            - condition: template
              value_template: '{{states.light.kitchen_light_level.attributes.brightness > 128}}'
            - condition: state
              entity_id: light.diningroom_light_level
              state: 'on'
            - condition: state
              entity_id: light.bedroom_light_level
              state: 'on'
            - condition: state
              entity_id: light.bathroom_light_level
              state: 'on'
            - condition: state
              entity_id: light.nightstand1
              state: 'on'
            - condition: state
              entity_id: light.nightstand2
              state: 'on'
            - condition: state
              entity_id: switch.bedroom_outlet_switch_3
              state: 'on'
            - condition: state
              entity_id: switch.kitchen_outlet_switch
              state: 'on'
            - condition: state
              entity_id: media_player.viziotv
              state: 'on'
            - condition: state
              entity_id: media_player.nadc338
              state: 'on'

    action:
      - service: notify.html5
        data:
          title: 'Something left on - {{now().strftime("%l:%M %P")}}'
          message: 'A light or outlet was left on.'
          data:
            requireInteraction: true
            renotify: true
            url: '/lovelace/home'
            actions:
              - action: 'turn_off'
                title: 'Turn off'

# Turn off when notifcation clicked
  - alias: Turn off notifcation
    initial_state: True

    trigger:
      - platform: event
        event_type: html5_notification.clicked
        event_data:
          action: turn_off

    action:
      - service: scene.turn_on
        entity_id: scene.all_things_off

  # Say Dishwasher Alert when done
  - alias: Say alert when dishwasher is done
    initial_state: True

    trigger:
      - platform: state
        entity_id: input_select.dishwasher_status
        to: 'Off'

    condition:
      condition: and
      conditions:
        - condition: time
          after: '08:00:00'
          before: '20:00:00'
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.user1_occupancy
              state: 'on'
            - condition: state
              entity_id: binary_sensor.user2_occupancy
              state: 'on'

    action:
      - service: notify.ga_broadcast
        data:
          message: "The Dishwasher has finished."

  # Say package is delivered
  - alias: Say package is delivered
    initial_state: True

    trigger: #Dummy Trigger
      - platform: state
        entity_id: input_select.dishwasher_status
        to: 'Dead'

    condition:
      condition: and
      conditions:
        - condition: time
          after: '08:00:00'
          before: '20:00:00'
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.user1_occupancy
              state: 'on'
            - condition: state
              entity_id: binary_sensor.user2_occupancy
              state: 'on'

    action:
      - service: notify.ga_broadcast
        data:
          message: "A package has been delivered."
      - service: notify.html5
        data:
          title: 'Package Delivered - {{now().strftime("%l:%M %P")}}'
          message: 'A package has been delivered.'
          data:
            requireInteraction: true
            renotify: true
            tag: 'package_notify'

  ## Welcome Home User1 Broadcast
  - alias: Say welcome home user1
    initial_state: True

    trigger:
      - platform: template
        value_template: '{{states.lock.front_door_handle_locked.attributes.lock_status == "Unlocked with Keypad by user 1"}}'

    condition:
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.binary_sensor.user1_occupancy.last_changed)) < 240 }}"
      - condition: time
        after: '10:00:00'
        before: '19:00:00'

    action:
      - delay: '00:00:05'
      - service: notify.ga_broadcast
        data:
          message: !secret user1_phrase

  # Espresso Notify
  - alias: Espresso Notify
    initial_state: True

    trigger:
      platform: state
      entity_id: switch.kitchen_outlet_switch
      to: 'on'
      for:
        minutes: 30

    action:
      - service: notify.html5
        data:
          title: 'Espresso Ready - {{now().strftime("%l:%M %P")}}'
          message: 'The espresso machine is warmed up.'
          data:
            requireInteraction: true
      - service: notify.ga_broadcast
        data:
          message: "The expresso machine is warmed up."

# Keep nest from going into eco mode when people are home
  - alias: antiecomode
    initial_state: True

    trigger:
      - platform: state
        entity_id: climate.dining_room
        to: 'eco'

    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.disable_nest
          state: 'off'
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.user1_occupancy
              state: 'on'
            - condition: state
              entity_id: binary_sensor.user2_occupancy
              state: 'on'
            - condition: state
              entity_id: binary_sensor.user3_occupancy
              state: 'on'
            - condition: state
              entity_id: binary_sensor.user4_occupancy
              state: 'on'

    action:
      - delay: '00:00:30'
      - service: climate.set_operation_mode
        data:
          entity_id: climate.dining_room
          operation_mode: auto

  # Bathroom heater on with motion
  - alias: Heater - Bathroom Motion On
    initial_state: True

    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_motion_sensor
        to: 'on'
      - platform: state
        entity_id: light.bathroom_light_level
        to: 'on'

    condition:
      - condition: state
        entity_id: switch.livingroom_outlet_switch_3
        state: 'off'
      - condition: state
        entity_id: input_boolean.disable_bathroom_heater
        state: 'off'
      - condition: template
        value_template: '{{states.weather.dark_sky.attributes.temperature < 40}}'
      - condition: template
        value_template: '{{states.weather.dark_sky.attributes.temperature > 10}}'

    action:
      service: homeassistant.turn_on
      entity_id: switch.livingroom_outlet_switch_3

  - alias: Heater - Bathroom Motion Off
    initial_state: True

    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_motion_sensor
        to: 'off'
        from: 'on'
        for:
          minutes: 6
      - platform: state
        entity_id: light.bathroom_light_level
        to: 'off'

    condition:
      - condition: state
        entity_id: input_boolean.disable_bathroom_heater
        state: 'off'
      - condition: template
        value_template: '{{states.weather.dark_sky.attributes.temperature < 40}}'
      - condition: template
        value_template: '{{states.weather.dark_sky.attributes.temperature > 10}}'

    action:
      service: homeassistant.turn_off
      entity_id: switch.livingroom_outlet_switch_3

  # Bathroom heater frezing manual schedule
  - alias: Heater - Manual Schedule
    initial_state: True

    trigger:
      - platform: time_pattern
        hours: '/1'
        minutes: 0
        seconds: 0

    condition:
      - condition: state
        entity_id: input_boolean.disable_bathroom_heater_schedule
        state: 'off'
      - condition: template
        value_template: '{{states.weather.dark_sky.attributes.temperature < 11}}'

    action:
      - service: homeassistant.turn_on
        entity_id: switch.livingroom_outlet_switch_3
      - delay: 00:30:00
      - service: homeassistant.turn_off
        entity_id: switch.livingroom_outlet_switch_3
